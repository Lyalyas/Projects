import telebot
import config
import random

from telebot import types
import requests # –ú–æ–¥—É–ª—å –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ URL
from bs4 import BeautifulSoup as b# –ú–æ–¥—É–ª—å –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å HTML
import time # –ú–æ–¥—É–ª—å –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –ø—Ä–æ–≥—Ä–∞–º–º—ã
import smtplib # –ú–æ–¥—É–ª—å –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –ø–æ—á—Ç–æ–π

# # –û—Å–Ω–æ–≤–Ω–æ–π –∫–ª–∞—Å—Å
# class Currency:
# 	# –°—Å—ã–ª–∫–∞ –Ω–∞ –Ω—É–∂–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
# 	URL = 'https://www.rbc.ru'
# 	# –ó–∞–≥–æ–ª–æ–≤–∫–∏ –¥–ª—è –ø–µ—Ä–µ–¥–∞—á–∏ –≤–º–µ—Å—Ç–µ —Å URL
# 	headers = {'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.149 Safari/537.36'}

# 	current_converted_price = 0
# 	difference = 5 # –†–∞–∑–Ω–∏—Ü–∞ –ø–æ—Å–ª–µ –∫–æ—Ç–æ—Ä–æ–π –±—É–¥–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–∞ –ø–æ—á—Ç—É

# 	def __init__(self):
# 		# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∫—É—Ä—Å–∞ –≤–∞–ª—é—Ç—ã –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –æ–±—ä–µ–∫—Ç–∞
# 		self.current_converted_price = float(self.get_currency_price().replace(",", "."))

# 	# –ú–µ—Ç–æ–¥ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∫—É—Ä—Å–∞ –≤–∞–ª—é—Ç—ã
# 	def get_currency_price(self):
# 		# –ü–∞—Ä—Å–∏–º –≤—Å—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
# 		full_page = requests.get(self.URL, headers=self.headers)

# 		# –†–∞–∑–±–∏—Ä–∞–µ–º —á–µ—Ä–µ–∑ BeautifulSoup
# 		soup = BeautifulSoup(full_page.content, 'html.parser')

# 		# –ü–æ–ª—É—á–∞–µ–º –Ω—É–∂–Ω–æ–µ –¥–ª—è –Ω–∞—Å –∑–Ω–∞—á–µ–Ω–∏–µ –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –µ–≥–æ
# 		# convert = soup.findAll("span", {"class": "DFlfde", "class": "SwHCTb", "data-precision": 2})
# 		return full_page.status_code

# urrency.get_currency_price()
# print(Currency.get_currency_price())

# –û—Å–Ω–æ–≤–Ω–æ–π –∫–ª–∞—Å—Å

	# –°—Å—ã–ª–∫–∞ –Ω–∞ –Ω—É–∂–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
URL = 'https://finance.rambler.ru/currencies/?ysclid=lemvjwn3gr793899689'
	# –ó–∞–≥–æ–ª–æ–≤–∫–∏ –¥–ª—è –ø–µ—Ä–µ–¥–∞—á–∏ –≤–º–µ—Å—Ç–µ —Å URL

headers={'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.77 Safari/537.36'}

current_converted_price = 0
difference = 5 # –†–∞–∑–Ω–∏—Ü–∞ –ø–æ—Å–ª–µ –∫–æ—Ç–æ—Ä–æ–π –±—É–¥–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–∞ –ø–æ—á—Ç—É

full_page = requests.get(URL, headers=headers)
r= full_page
soup = b(r.text, 'lxml')
# USD = soup.find_all(
# 	'div', class_ ="finance-currency-table__body"


# 	)

# USD = soup.find(title = "–ï–≤—Ä–æ")
# print(USD[2])
# for uds in USD:
# 	print(uds.text)
USD = soup.find_all(
	"a", {"class": "finance-currency-table__tr"})
for usd in USD:
	if ((usd.find(
		"div", {"class": "finance-currency-table__cell finance-currency-table__cell--currency"})).text.strip()) == "–ï–≤—Ä–æ":
		EURO = ((usd.find(
			"div", {"class": "finance-currency-table__cell finance-currency-table__cell--value"})).text.strip())
	if ((usd.find(
		"div", {"class": "finance-currency-table__cell finance-currency-table__cell--currency"})).text.strip()) == "–î–æ–ª–ª–∞—Ä –°–®–ê":
		USD1 = ((usd.find(
			"div", {"class": "finance-currency-table__cell finance-currency-table__cell--value"})).text.strip())

	if ((usd.find(
		"div", {"class": "finance-currency-table__cell finance-currency-table__cell--currency"})).text.strip()) == "–¢—É—Ä–µ—Ü–∫–∞—è –ª–∏—Ä–∞":
		LIRA = ((usd.find(
			"div", {"class": "finance-currency-table__cell finance-currency-table__cell--value"})).text.strip())
		
# 		usd1 = ((usd.find(
# 			"div", {"class": "finance-currency-table__cell finance-currency-table__cell--value"})).text)
# print(usd1)

print(EURO, USD1, LIRA)












# bot = telebot.TeleBot(config.TOKEN)

# @bot.message_handler(commands=['start'])
# def welcome(message):
# 	# sti = open('/Users/ilyaszmorka/Desktop/telebot/sticker1.webp', 'rb')
# 	bot.send_message(message.chat.id, '–ü—Ä–∏–≤–µ—Ç')

# 	# keyboard
# 	markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
# 	item1 = types.KeyboardButton("üíµ –ö—É—Ä—Å –î–æ–ª–ª–∞—Ä–∞")
# 	item2 = types.KeyboardButton("üí∂ –ö—É—Ä—Å –ï–≤—Ä–æ")
# 	item3 = types.KeyboardButton("üí∂ –ö—É—Ä—Å –¢—É—Ä–µ—Ü–∫–æ–π –ª–∏—Ä—ã")

# 	markup.add(item1, item2,item3)

# 	bot.send_message(message.chat.id, "–Ω–∞—Å—Ç—è –ø—Ä–∏–≤–µ—Ç —Å–æ–ª–Ω—Ü–µ, {0.first_name}!\n–Ø - <b>{1.first_name}</b>, –¥—Ä—É–≥ –∏–ª–∏ –ø–æ–¥—Ä—É–∂–∫–∞ –ò–ª—å—è—Å–∞, —Ç–∞–º —Å–ª–æ–∂–Ω–æ –≤ –æ–±—â–µ–º.".format(message.from_user, bot.get_me()),
# 		parse_mode='html', reply_markup=markup)

# @bot.message_handler(content_types=['text'])
# def lalala(message):
# 	if message.chat.type == 'private':
# 		if message.text == 'üé≤ –†–∞–Ω–¥–æ–º–Ω–æ–µ —á–∏—Å–ª–æ':
# 			bot.send_message(message.chat.id, str(random.randint(0,100)))
# 		elif message.text == 'üòä –ö–∞–∫ –¥–µ–ª–∞?':

# 			markup = types.InlineKeyboardMarkup(row_width=2)
# 			item1 = types.InlineKeyboardButton("–•–æ—Ä–æ—à–æ", callback_data='good')
# 			item2 = types.InlineKeyboardButton("–ù–µ –æ—á–µ–Ω—å", callback_data='bad')

# 			markup.add(item1, item2)

# 			bot.send_message(message.chat.id, '–û—Ç–ª–∏—á–Ω–æ, —Å–∞–º –∫–∞–∫?', reply_markup=markup)
# 		else:
# 			bot.send_message(message.chat.id, '–Ø –Ω–µ –∑–Ω–∞—é —á—Ç–æ –æ—Ç–≤–µ—Ç–∏—Ç—å üò¢')

# @bot.callback_query_handler(func=lambda call: True)
# def callback_inline(call):
# 	try:
# 		if call.message:
# 			if call.data == 'good':
# 				bot.send_message(call.message.chat.id, '–í–æ—Ç –∏ –æ—Ç–ª–∏—á–Ω–µ–Ω—å–∫–æ üòä')
# 			elif call.data == 'bad':
# 				bot.send_message(call.message.chat.id, '–ë—ã–≤–∞–µ—Ç üò¢')

# 			# remove inline buttons
# 			bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text="üòä –ö–∞–∫ –¥–µ–ª–∞?",
# 				reply_markup=None)

# 			# show alert
# 			bot.answer_callback_query(callback_query_id=call.id, show_alert=False,
# 				text="–≠–¢–û –¢–ï–°–¢–û–í–û–ï –£–í–ï–î–û–ú–õ–ï–ù–ò–ï!!11")

# 	except Exception as e:
# 		print(repr(e))

# # RUN
# bot.polling(none_stop=True)





# import telebot
# import config
# import random

# from telebot import types
# import requests # –ú–æ–¥—É–ª—å –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ URL
# from bs4 import BeautifulSoup as b# –ú–æ–¥—É–ª—å –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å HTML
# import time # –ú–æ–¥—É–ª—å –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –ø—Ä–æ–≥—Ä–∞–º–º—ã
# import smtplib # –ú–æ–¥—É–ª—å –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –ø–æ—á—Ç–æ–π

# # # –û—Å–Ω–æ–≤–Ω–æ–π –∫–ª–∞—Å—Å
# # class Currency:
# # 	# –°—Å—ã–ª–∫–∞ –Ω–∞ –Ω—É–∂–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
# # 	URL = 'https://www.rbc.ru'
# # 	# –ó–∞–≥–æ–ª–æ–≤–∫–∏ –¥–ª—è –ø–µ—Ä–µ–¥–∞—á–∏ –≤–º–µ—Å—Ç–µ —Å URL
# # 	headers = {'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.149 Safari/537.36'}

# # 	current_converted_price = 0
# # 	difference = 5 # –†–∞–∑–Ω–∏—Ü–∞ –ø–æ—Å–ª–µ –∫–æ—Ç–æ—Ä–æ–π –±—É–¥–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–∞ –ø–æ—á—Ç—É

# # 	def __init__(self):
# # 		# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∫—É—Ä—Å–∞ –≤–∞–ª—é—Ç—ã –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –æ–±—ä–µ–∫—Ç–∞
# # 		self.current_converted_price = float(self.get_currency_price().replace(",", "."))

# # 	# –ú–µ—Ç–æ–¥ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∫—É—Ä—Å–∞ –≤–∞–ª—é—Ç—ã
# # 	def get_currency_price(self):
# # 		# –ü–∞—Ä—Å–∏–º –≤—Å—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
# # 		full_page = requests.get(self.URL, headers=self.headers)

# # 		# –†–∞–∑–±–∏—Ä–∞–µ–º —á–µ—Ä–µ–∑ BeautifulSoup
# # 		soup = BeautifulSoup(full_page.content, 'html.parser')

# # 		# –ü–æ–ª—É—á–∞–µ–º –Ω—É–∂–Ω–æ–µ –¥–ª—è –Ω–∞—Å –∑–Ω–∞—á–µ–Ω–∏–µ –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –µ–≥–æ
# # 		# convert = soup.findAll("span", {"class": "DFlfde", "class": "SwHCTb", "data-precision": 2})
# # 		return full_page.status_code

# # urrency.get_currency_price()
# # print(Currency.get_currency_price())

# # –û—Å–Ω–æ–≤–Ω–æ–π –∫–ª–∞—Å—Å

# 	# –°—Å—ã–ª–∫–∞ –Ω–∞ –Ω—É–∂–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
# URL = 'https://finance.rambler.ru/currencies/?ysclid=lemvjwn3gr793899689'
# 	# –ó–∞–≥–æ–ª–æ–≤–∫–∏ –¥–ª—è –ø–µ—Ä–µ–¥–∞—á–∏ –≤–º–µ—Å—Ç–µ —Å URL

# headers={'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.77 Safari/537.36'}

# current_converted_price = 0
# difference = 5 # –†–∞–∑–Ω–∏—Ü–∞ –ø–æ—Å–ª–µ –∫–æ—Ç–æ—Ä–æ–π –±—É–¥–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–∞ –ø–æ—á—Ç—É

# full_page = requests.get(URL, headers=headers)
# r= full_page
# soup = b(r.text, 'lxml')
# # USD = soup.find_all(
# # 	'div', class_ ="finance-currency-table__body"


# # 	)

# USD = soup.find(title = "–ï–≤—Ä–æ")
# print(USD[2])
# for uds in USD:
# 	print(uds.text)
# USD = soup.find_all(
# 	"a", {"class": "finance-currency-table__tr"})
# for usd in USD:
# 	if ((usd.find(
# 		"div", {"class": "finance-currency-table__cell finance-currency-table__cell--currency"})).text.strip()) == "–ï–≤—Ä–æ":
# 		EURO = ((usd.find(
# 			"div", {"class": "finance-currency-table__cell finance-currency-table__cell--value"})).text.strip())
# 	if ((usd.find(
# 		"div", {"class": "finance-currency-table__cell finance-currency-table__cell--currency"})).text.strip()) == "–î–æ–ª–ª–∞—Ä –°–®–ê":
# 		USD1 = ((usd.find(
# 			"div", {"class": "finance-currency-table__cell finance-currency-table__cell--value"})).text.strip())

# 	if ((usd.find(
# 		"div", {"class": "finance-currency-table__cell finance-currency-table__cell--currency"})).text.strip()) == "–¢—É—Ä–µ—Ü–∫–∞—è –ª–∏—Ä–∞":
# 		LIRA = ((usd.find(
# 			"div", {"class": "finance-currency-table__cell finance-currency-table__cell--value"})).text.strip())
		
# # 		usd1 = ((usd.find(
# # 			"div", {"class": "finance-currency-table__cell finance-currency-table__cell--value"})).text)
# # print(usd1)

# print(EURO, USD1, LIRA)












bot = telebot.TeleBot(config.TOKEN)

@bot.message_handler(commands=['start'])
def welcome(message):
	# sti = open('/Users/ilyaszmorka/Desktop/telebot/sticker1.webp', 'rb')
	bot.send_message(message.chat.id, "–í—ã–±–∏—Ä–∞–π –ª—é–±—É—é –≤–∞–ª—é—Ç—É")

	# keyboard
	markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
	item1 = types.KeyboardButton("üá∫üá∏ –ö—É—Ä—Å –î–æ–ª–ª–∞—Ä–∞")
	item2 = types.KeyboardButton("üá™üá∫ –ö—É—Ä—Å –ï–≤—Ä–æ")
	item3 = types.KeyboardButton("üáπüá∑ –ö—É—Ä—Å –¢—É—Ä–µ—Ü–∫–æ–π –ª–∏—Ä—ã")

	markup.add(item1, item2,item3)


@bot.message_handler(content_types=['text'])
def lalala(message):
	if message.chat.type == 'private':
		if message.text == "üá∫üá∏ –ö—É—Ä—Å –î–æ–ª–ª–∞—Ä–∞":
			bot.send_message(message.chat.id, USD1)
		if message.text == "üá™üá∫ –ö—É—Ä—Å –ï–≤—Ä–æ":
			bot.send_message(message.chat.id, EURO)
		if message.text == "üáπüá∑ –ö—É—Ä—Å –¢—É—Ä–µ—Ü–∫–æ–π –ª–∏—Ä—ã":
			bot.send_message(message.chat.id, LIRA)

				
		else:
			bot.send_message(message.chat.id, '–Ø –Ω–µ –∑–Ω–∞—é —á—Ç–æ –æ—Ç–≤–µ—Ç–∏—Ç—å üò¢')



# RUN
bot.polling()